hereconst TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const path = require('path');
const moment = require('moment');

const app = express();
const server = http.createServer(app);
const io = socketIo(server);

// โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
// โโโ  ุถุน ูุนูููุงุช ุงูุจูุช ููุง  โโโ
const BOT_TOKEN = '8209265822:AAHY3qWox6vmKvv4Er8RSy_gsV2_o8MrK6E';
const ADMIN_CHAT_ID = '7604667042';
const PORT = process.env.PORT || 3000;
// โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ

const bot = new TelegramBot(BOT_TOKEN, { polling: true });
let botStats = {
  startTime: new Date(),
  totalUsers: 0,
  totalMessages: 0
};
let connectedUsers = new Map();

// ุฅุนุฏุงุฏุงุช ุงูุณูุฑูุฑ
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.get('/api/stats', (req, res) => {
  res.json({
    uptime: moment(botStats.startTime).fromNow(),
    totalUsers: botStats.totalUsers,
    totalMessages: botStats.totalMessages,
    activeUsers: connectedUsers.size
  });
});

// ุฃูุงูุฑ ุงูุจูุช
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name;
  
  if (!connectedUsers.has(chatId)) {
    connectedUsers.set(chatId, {
      id: chatId,
      name: userName,
      joinDate: new Date(),
      messageCount: 0
    });
    botStats.totalUsers++;
  }

  botStats.totalMessages++;

  const welcomeMsg = `๐ ุฃููุงู ุจู ${userName}!

๐ค *ุงูุจูุช ุงูุงุญุชุฑุงูู*

๐ *ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:*
/start - ุจุฏุก ุงูุจูุช
/help - ุงููุณุงุนุฏุฉ  
/stats - ุงูุฅุญุตุงุฆูุงุช

๐ *ููุญุฉ ุงูุชุญูู:*
ุฑุงุจุท ุงูุฅุฏุงุฑุฉ: https://king-pro.onrender.com`;

  bot.sendMessage(chatId, welcomeMsg, { parse_mode: 'Markdown' });
  
  io.emit('userUpdate', {
    users: Array.from(connectedUsers.values()),
    stats: botStats
  });
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  botStats.totalMessages++;

  const helpMsg = `๐ *ุฏููู ุงูุฃูุงูุฑ*

/start - ุจุฏุก ุงูุจูุช ูุงูุชุฑุญูุจ
/help - ุนุฑุถ ุงููุณุงุนุฏุฉ
/stats - ุฅุญุตุงุฆูุงุช ุงูุจูุช

โก ุงูุจูุช ูุนูู ุจููุงุกุฉ!`;

  bot.sendMessage(chatId, helpMsg, { parse_mode: 'Markdown' });
});

bot.onText(/\/stats/, (msg) => {
  const chatId = msg.chat.id;
  botStats.totalMessages++;

  const statsMsg = `๐ *ุฅุญุตุงุฆูุงุช ุงูุจูุช*

๐ฅ ุงููุณุชุฎุฏููู: ${botStats.totalUsers}
๐ฌ ุงูุฑุณุงุฆู: ${botStats.totalMessages}
๐ ุงูุชุดุบูู: ${moment(botStats.startTime).fromNow()}
โก ุงูุจูุช ูุดุท!`;

  bot.sendMessage(chatId, statsMsg, { parse_mode: 'Markdown' });
});

// ููุจ ุณูููุช
io.on('connection', (socket) => {
  console.log('๐ค ูุณุชุฎุฏู ูุชุตู ุจุงููุงุฌูุฉ');
  socket.emit('initialData', {
    users: Array.from(connectedUsers.values()),
    stats: botStats
  });
});

// ุชุดุบูู ุงูุณูุฑูุฑ
server.listen(PORT, () => {
  console.log(`๐ ุงูุณูุฑูุฑ ุดุบุงู ุนูู ุงูุจูุฑุช ${PORT}`);
  console.log(`๐ ููุญุฉ ุงูุชุญูู ุฌุงูุฒุฉ`);
});

// ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
bot.on('error', (error) => {
  console.log('โ ุฎุทุฃ ูู ุงูุจูุช:', error);
});
